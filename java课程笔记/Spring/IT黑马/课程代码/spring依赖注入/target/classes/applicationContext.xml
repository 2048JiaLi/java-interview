<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--构造函数注入：
            使用标签：constructor-arg
            标签出现的位置：bean标签内部
            标签中的属性
                type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
                index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引从0开始
                name：用于指定给构造函数中指定名称的参数赋值
                ===============以上用于指定给构造函数中哪个参数赋值=======================
                value：用于提供基本类型和String类型的数据
                ref：用于指定其他的bean类型数据。它指的就是spring的IOC核心容器中出现过的bean对象

            优势：
                在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功。
            弊端：
                改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供。
    -->
    <bean id="accountService" class="demo.service.impl.AccountServiceImpl">
        <!--<constructor-arg type="java.lang.String" value="test"></constructor-arg>-->
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"/>
        <constructor-arg name="birthday" ref="now"/>
    </bean>
    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>


    <!-- set方法注入
         设计的标签：property
         出现的位置：bean标签内部
         标签的属性：
                name：用于指定给构造函数中指定名称的参数赋值
                value：用于提供基本类型和String类型的数据
                ref：用于指定其他的bean类型数据。它指的就是spring的IOC核心容器中出现过的bean对象

         优势：
            创建对象时没有明确的限制，可以直接使用默认构造函数
         弊端：
            如果有某个成员必须有值，则获取对象是有可能set方法没有执行
    -->
    <bean id="accountService2" class="demo.service.impl.Impl2">
        <property name="name" value="TEST"/>
        <property name="age" value="21"/>
        <property name="birthday" ref="now"/>
    </bean>

    <!-- 复杂类型的注入 / 集合类型


    -->
    <bean id="accountService3" class="demo.service.impl.Impl3">
        <property name="myStrs">
            <array>
                <value>AA</value>
                <value>BB</value>
                <value>CC</value>
            </array>
        </property>

        <property name="myList">
            <list>
                <value>AA</value>
                <value>BB</value>
                <value>CC</value>
            </list>
        </property>

        <property name="mySet">
            <set>
                <value>AA</value>
                <value>BB</value>
                <value>CC</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="testA" value="aaa"></entry>
                <entry key="testB">
                    <value>BBB</value>
                </entry>
            </map>
        </property>

        <property name="myProps">
            <props>
                <prop key="test">ccc</prop>
            </props>
        </property>
    </bean>
</beans>